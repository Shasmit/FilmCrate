// Mocks generated by Mockito 5.4.2 from annotations
// in filmcrate/test/unit_test/movie_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:io' as _i13;

import 'package:dartz/dartz.dart' as _i3;
import 'package:filmcrate/core/failure/failure.dart' as _i8;
import 'package:filmcrate/features/movies/domain/entity/main_entity.dart'
    as _i9;
import 'package:filmcrate/features/movies/domain/repository/movie_repository.dart'
    as _i2;
import 'package:filmcrate/features/movies/domain/use_case/movie_use_case.dart'
    as _i6;
import 'package:filmcrate/features/profile/domain/entity/password_entity.dart'
    as _i12;
import 'package:filmcrate/features/profile/domain/entity/profile_entity.dart'
    as _i11;
import 'package:filmcrate/features/profile/domain/repository/profile_repository.dart'
    as _i4;
import 'package:filmcrate/features/profile/domain/use_case/profile_use_case.dart'
    as _i10;
import 'package:filmcrate/features/watchlist/domain/entity/watchlist_entity.dart'
    as _i15;
import 'package:filmcrate/features/watchlist/domain/repository/watchlist_repository.dart'
    as _i5;
import 'package:filmcrate/features/watchlist/domain/use_case/watchlist_use_case.dart'
    as _i14;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIMovieRepository_0 extends _i1.SmartFake
    implements _i2.IMovieRepository {
  _FakeIMovieRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIProfileRepository_2 extends _i1.SmartFake
    implements _i4.IProfileRepository {
  _FakeIProfileRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIWatchListRepository_3 extends _i1.SmartFake
    implements _i5.IWatchListRepository {
  _FakeIWatchListRepository_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MovieUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieUseCase extends _i1.Mock implements _i6.MovieUseCase {
  @override
  _i2.IMovieRepository get movieRepository => (super.noSuchMethod(
        Invocation.getter(#movieRepository),
        returnValue: _FakeIMovieRepository_0(
          this,
          Invocation.getter(#movieRepository),
        ),
        returnValueForMissingStub: _FakeIMovieRepository_0(
          this,
          Invocation.getter(#movieRepository),
        ),
      ) as _i2.IMovieRepository);
  @override
  _i7.Future<
      _i3.Either<_i8.Failure,
          List<_i9.TopRatedMovieEntity>>> getTopRatedMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [],
        ),
        returnValue: _i7.Future<
                _i3.Either<_i8.Failure, List<_i9.TopRatedMovieEntity>>>.value(
            _FakeEither_1<_i8.Failure, List<_i9.TopRatedMovieEntity>>(
          this,
          Invocation.method(
            #getTopRatedMovies,
            [],
          ),
        )),
        returnValueForMissingStub: _i7.Future<
                _i3.Either<_i8.Failure, List<_i9.TopRatedMovieEntity>>>.value(
            _FakeEither_1<_i8.Failure, List<_i9.TopRatedMovieEntity>>(
          this,
          Invocation.method(
            #getTopRatedMovies,
            [],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i8.Failure, List<_i9.TopRatedMovieEntity>>>);
  @override
  _i7.Future<
      _i3.Either<_i8.Failure,
          List<_i9.TrendingMovieEntity>>> getTrendingMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTrendingMovies,
          [],
        ),
        returnValue: _i7.Future<
                _i3.Either<_i8.Failure, List<_i9.TrendingMovieEntity>>>.value(
            _FakeEither_1<_i8.Failure, List<_i9.TrendingMovieEntity>>(
          this,
          Invocation.method(
            #getTrendingMovies,
            [],
          ),
        )),
        returnValueForMissingStub: _i7.Future<
                _i3.Either<_i8.Failure, List<_i9.TrendingMovieEntity>>>.value(
            _FakeEither_1<_i8.Failure, List<_i9.TrendingMovieEntity>>(
          this,
          Invocation.method(
            #getTrendingMovies,
            [],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i8.Failure, List<_i9.TrendingMovieEntity>>>);
  @override
  _i7.Future<
      _i3.Either<_i8.Failure,
          List<_i9.PopularMovieEntity>>> getPopularMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
        ),
        returnValue: _i7.Future<
                _i3.Either<_i8.Failure, List<_i9.PopularMovieEntity>>>.value(
            _FakeEither_1<_i8.Failure, List<_i9.PopularMovieEntity>>(
          this,
          Invocation.method(
            #getPopularMovies,
            [],
          ),
        )),
        returnValueForMissingStub: _i7.Future<
                _i3.Either<_i8.Failure, List<_i9.PopularMovieEntity>>>.value(
            _FakeEither_1<_i8.Failure, List<_i9.PopularMovieEntity>>(
          this,
          Invocation.method(
            #getPopularMovies,
            [],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i8.Failure, List<_i9.PopularMovieEntity>>>);
  @override
  _i7.Future<_i3.Either<_i8.Failure, List<_i9.AllMovieEntity>>> getMovieDetails(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetails,
          [id],
        ),
        returnValue:
            _i7.Future<_i3.Either<_i8.Failure, List<_i9.AllMovieEntity>>>.value(
                _FakeEither_1<_i8.Failure, List<_i9.AllMovieEntity>>(
          this,
          Invocation.method(
            #getMovieDetails,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.Either<_i8.Failure, List<_i9.AllMovieEntity>>>.value(
                _FakeEither_1<_i8.Failure, List<_i9.AllMovieEntity>>(
          this,
          Invocation.method(
            #getMovieDetails,
            [id],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i8.Failure, List<_i9.AllMovieEntity>>>);
}

/// A class which mocks [ProfileUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileUseCase extends _i1.Mock implements _i10.ProfileUseCase {
  @override
  _i4.IProfileRepository get profileRepository => (super.noSuchMethod(
        Invocation.getter(#profileRepository),
        returnValue: _FakeIProfileRepository_2(
          this,
          Invocation.getter(#profileRepository),
        ),
        returnValueForMissingStub: _FakeIProfileRepository_2(
          this,
          Invocation.getter(#profileRepository),
        ),
      ) as _i4.IProfileRepository);
  @override
  _i7.Future<
      _i3
          .Either<_i8.Failure, List<_i11.ProfileEntity>>> getUserProfile() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [],
        ),
        returnValue:
            _i7.Future<_i3.Either<_i8.Failure, List<_i11.ProfileEntity>>>.value(
                _FakeEither_1<_i8.Failure, List<_i11.ProfileEntity>>(
          this,
          Invocation.method(
            #getUserProfile,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.Either<_i8.Failure, List<_i11.ProfileEntity>>>.value(
                _FakeEither_1<_i8.Failure, List<_i11.ProfileEntity>>(
          this,
          Invocation.method(
            #getUserProfile,
            [],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i8.Failure, List<_i11.ProfileEntity>>>);
  @override
  _i7.Future<_i3.Either<_i8.Failure, bool>> updateUserProfile(
          _i12.PasswordEntity? password) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserProfile,
          [password],
        ),
        returnValue: _i7.Future<_i3.Either<_i8.Failure, bool>>.value(
            _FakeEither_1<_i8.Failure, bool>(
          this,
          Invocation.method(
            #updateUserProfile,
            [password],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.Either<_i8.Failure, bool>>.value(
                _FakeEither_1<_i8.Failure, bool>(
          this,
          Invocation.method(
            #updateUserProfile,
            [password],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i8.Failure, bool>>);
  @override
  _i7.Future<_i3.Either<_i8.Failure, String>> uploadProfilePicture(
          _i13.File? file) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadProfilePicture,
          [file],
        ),
        returnValue: _i7.Future<_i3.Either<_i8.Failure, String>>.value(
            _FakeEither_1<_i8.Failure, String>(
          this,
          Invocation.method(
            #uploadProfilePicture,
            [file],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.Either<_i8.Failure, String>>.value(
                _FakeEither_1<_i8.Failure, String>(
          this,
          Invocation.method(
            #uploadProfilePicture,
            [file],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i8.Failure, String>>);
  @override
  _i7.Future<_i3.Either<_i8.Failure, bool>> editProfile(
    String? username,
    String? email,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #editProfile,
          [
            username,
            email,
          ],
        ),
        returnValue: _i7.Future<_i3.Either<_i8.Failure, bool>>.value(
            _FakeEither_1<_i8.Failure, bool>(
          this,
          Invocation.method(
            #editProfile,
            [
              username,
              email,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.Either<_i8.Failure, bool>>.value(
                _FakeEither_1<_i8.Failure, bool>(
          this,
          Invocation.method(
            #editProfile,
            [
              username,
              email,
            ],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i8.Failure, bool>>);
}

/// A class which mocks [WatchListUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchListUseCase extends _i1.Mock implements _i14.WatchListUseCase {
  @override
  _i5.IWatchListRepository get watchListRepository => (super.noSuchMethod(
        Invocation.getter(#watchListRepository),
        returnValue: _FakeIWatchListRepository_3(
          this,
          Invocation.getter(#watchListRepository),
        ),
        returnValueForMissingStub: _FakeIWatchListRepository_3(
          this,
          Invocation.getter(#watchListRepository),
        ),
      ) as _i5.IWatchListRepository);
  @override
  _i7.Future<_i3.Either<_i8.Failure, bool>> createWatchlist(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #createWatchlist,
          [id],
        ),
        returnValue: _i7.Future<_i3.Either<_i8.Failure, bool>>.value(
            _FakeEither_1<_i8.Failure, bool>(
          this,
          Invocation.method(
            #createWatchlist,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.Either<_i8.Failure, bool>>.value(
                _FakeEither_1<_i8.Failure, bool>(
          this,
          Invocation.method(
            #createWatchlist,
            [id],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i8.Failure, bool>>);
  @override
  _i7.Future<_i3.Either<_i8.Failure, bool>> deleteWatchlist(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWatchlist,
          [id],
        ),
        returnValue: _i7.Future<_i3.Either<_i8.Failure, bool>>.value(
            _FakeEither_1<_i8.Failure, bool>(
          this,
          Invocation.method(
            #deleteWatchlist,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.Either<_i8.Failure, bool>>.value(
                _FakeEither_1<_i8.Failure, bool>(
          this,
          Invocation.method(
            #deleteWatchlist,
            [id],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i8.Failure, bool>>);
  @override
  _i7.Future<_i3.Either<_i8.Failure, List<_i15.WatchListEntity>>>
      getWatchList() => (super.noSuchMethod(
            Invocation.method(
              #getWatchList,
              [],
            ),
            returnValue: _i7.Future<
                    _i3.Either<_i8.Failure, List<_i15.WatchListEntity>>>.value(
                _FakeEither_1<_i8.Failure, List<_i15.WatchListEntity>>(
              this,
              Invocation.method(
                #getWatchList,
                [],
              ),
            )),
            returnValueForMissingStub: _i7.Future<
                    _i3.Either<_i8.Failure, List<_i15.WatchListEntity>>>.value(
                _FakeEither_1<_i8.Failure, List<_i15.WatchListEntity>>(
              this,
              Invocation.method(
                #getWatchList,
                [],
              ),
            )),
          ) as _i7.Future<_i3.Either<_i8.Failure, List<_i15.WatchListEntity>>>);
}
